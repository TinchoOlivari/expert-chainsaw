# Generated by Django 5.2.4 on 2025-08-04 05:18

import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='PaymentRecipient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Full name of the payment recipient', max_length=200)),
                ('alias', models.CharField(help_text='Unique alias for the recipient', max_length=100, unique=True)),
                ('cbu', models.CharField(help_text='CBU (Bank account number)', max_length=22)),
                ('max_amount', models.DecimalField(decimal_places=2, help_text='Maximum monthly amount this recipient can receive', max_digits=12)),
                ('is_recurring', models.BooleanField(default=True, help_text='If True, resets monthly. If False, one-time payment recipient')),
                ('priority_order', models.PositiveIntegerField(default=1, help_text='Priority order for automatic selection (lower number = higher priority)')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this recipient is active and can receive payments')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Payment Recipient',
                'verbose_name_plural': 'Payment Recipients',
                'ordering': ['priority_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('administrator', 'Administrator'), ('operator', 'Operator')], default='operator', help_text='User role determines access permissions', max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, help_text='Payment amount', max_digits=12)),
                ('date', models.DateTimeField(default=django.utils.timezone.now, help_text='Date and time when payment was registered')),
                ('proof_of_payment_file', models.FileField(blank=True, help_text='Upload proof of payment (image or PDF)', null=True, upload_to='payment_proofs/%Y/%m/')),
                ('notes', models.TextField(blank=True, help_text='Additional notes about this payment')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('operator_user', models.ForeignKey(help_text='Operator who registered this payment', on_delete=django.db.models.deletion.PROTECT, related_name='registered_payments', to=settings.AUTH_USER_MODEL)),
                ('payment_recipient', models.ForeignKey(help_text='Recipient of this payment', on_delete=django.db.models.deletion.PROTECT, related_name='payments', to='payment_instructions.paymentrecipient')),
            ],
            options={
                'verbose_name': 'Payment',
                'verbose_name_plural': 'Payments',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='MonthlyBalance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveIntegerField()),
                ('month', models.PositiveIntegerField()),
                ('total_received', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('payment_count', models.PositiveIntegerField(default=0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('payment_recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='monthly_balances', to='payment_instructions.paymentrecipient')),
            ],
            options={
                'verbose_name': 'Monthly Balance',
                'verbose_name_plural': 'Monthly Balances',
                'ordering': ['-year', '-month'],
                'unique_together': {('payment_recipient', 'year', 'month')},
            },
        ),
    ]
