# Generated by Django 5.2.4 on 2025-08-27 20:12

import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import payment_instructions.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='PaymentRecipient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Nombre del destinatario', max_length=200, verbose_name='Nombre')),
                ('alias', models.CharField(help_text='Alias del destinatario', max_length=100, unique=True)),
                ('cbu', models.CharField(help_text='CBU / CVU del destinatario', max_length=22, unique=True, verbose_name='CBU / CVU')),
                ('max_amount', models.PositiveIntegerField(help_text='Monto que el destinatario puede recibir', verbose_name='Salario')),
                ('is_recurring', models.BooleanField(default=True, help_text='Si es Verdadero, se reinicia mensualmente. Si es Falso, es un pago único', verbose_name='Recurrente')),
                ('priority_order', models.PositiveIntegerField(default=1, help_text='Orden de prioridad para la selección automática (Menor numero es mayor prioridad)', verbose_name='Orden')),
                ('is_active', models.BooleanField(default=True, help_text='Si es Verdadero, el destinatario puede recibir pagos. Si es Falso, el destinatario no puede recibir pagos', verbose_name='Activo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creado')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Actualizado')),
            ],
            options={
                'verbose_name': 'Destinatario',
                'verbose_name_plural': 'Destinatarios',
                'ordering': ['priority_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Specialist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Nombre del especialista', max_length=200, verbose_name='Nombre')),
                ('email', models.EmailField(blank=True, help_text='Email del especialista', max_length=254, null=True, verbose_name='Email')),
                ('is_active', models.BooleanField(default=True, help_text='Si es Verdadero, disponible para asignación a pagos', verbose_name='Activo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creado')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Actualizado')),
            ],
            options={
                'verbose_name': 'Especialista',
                'verbose_name_plural': 'Especialistas',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('administrator', 'Administrator'), ('operator', 'Operator')], default='operator', help_text='Rol del usuario', max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveIntegerField(help_text='Monto del pago', verbose_name='Monto')),
                ('proof_of_payment_file', models.FileField(help_text='Subir comprobante de pago (imagen o PDF)', upload_to=payment_instructions.models.modify_file_name, verbose_name='Comprobante')),
                ('notes', models.TextField(blank=True, help_text='Notas adicionales sobre el pago', verbose_name='Notas')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creado')),
                ('operator_user', models.ForeignKey(help_text='Operador que registró este pago', on_delete=django.db.models.deletion.PROTECT, related_name='registered_payments', to=settings.AUTH_USER_MODEL, verbose_name='Operador')),
                ('payment_recipient', models.ForeignKey(help_text='Destinatario del pago', on_delete=django.db.models.deletion.PROTECT, related_name='payments', to='payment_instructions.paymentrecipient', verbose_name='Destinatario')),
                ('specialist', models.ForeignKey(help_text='Especialista asociado al pago', on_delete=django.db.models.deletion.PROTECT, related_name='payments', to='payment_instructions.specialist', verbose_name='Especialista')),
            ],
            options={
                'verbose_name': 'Pago',
                'verbose_name_plural': 'Pagos',
                'ordering': ['-created_at'],
            },
        ),
    ]
